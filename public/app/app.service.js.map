{"version":3,"sources":["app.service.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;YASA;gBAGI,oBAAoB,KAAW;oBAAX,UAAK,GAAL,KAAK,CAAM;oBAD/B,gBAAW,GAAG,EAAE,KAAK,EAAE,wBAAwB,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;oBAElE,IAAI,CAAC,KAAK,GAAG,MAAM,CAAE;gBACzB,CAAC;gBAED,qCAAqC;gBACrC,iCAAY,GAAZ;oBACI,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;oBAC5B,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;oBACnD,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAC,GAAG,CAAC,CAAC;oBAClD,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,iBAAiB,EAAC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW,CAAC,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAE,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBACtH,CAAC;gBAED,oCAAe,GAAf,UAAgB,OAAgB,EAAG,KAAK;oBACpC,OAAO,CAAC,MAAM,CAAC,cAAc,EAAE,kBAAkB,CAAC,CAAC;oBACnD,OAAO,CAAC,MAAM,CAAC,6BAA6B,EAAC,GAAG,CAAC,CAAC;oBAClD,OAAO,CAAC,MAAM,CAAC,eAAe,EAAG,KAAK,CAAC,CAAC;gBAC5C,CAAC;gBAED,6BAAQ,GAAR,UAAS,KAAK;oBACV,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;oBACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,YAAY,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAE,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBAC/E,CAAC;gBAED,4BAAO,GAAP,UAAQ,KAAK,EAAC,GAAG;oBACb,IAAI,OAAO,GAAG,IAAI,cAAO,EAAE,CAAC;oBAC5B,IAAI,CAAC,eAAe,CAAC,OAAO,EAAC,KAAK,CAAC,CAAC;oBACpC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,EAAC,EAAC,OAAO,EAAC,OAAO,EAAC,CAAC,CAAC,GAAG,CAAC,UAAA,GAAG,IAAE,OAAA,GAAG,CAAC,IAAI,EAAE,EAAV,CAAU,CAAC,CAAC;gBACtE,CAAC;gBAjCL;oBAAC,iBAAU,EAAE;;8BAAA;gBAmCb,iBAAC;YAAD,CAjCA,AAiCC,IAAA;YAjCD,mCAiCC,CAAA","file":"app.service.js","sourcesContent":["import {Injectable} from '@angular/core';\r\nimport {Http,Headers,RequestOptions,Response} from '@angular/http' ;\r\nimport {Observable} from 'rxjs/Rx';\r\nimport 'rxjs/add/operator/map' ;\r\nimport 'rxjs/add/operator/catch';\r\n\r\n\r\n@Injectable()\r\n\r\nexport class AppService{\r\n    users:any ;\r\n    tokenParams = { email: \"wael.walid91@gmail.com\", password: '123456' };\r\n    constructor(private _http: Http){\r\n        this.users = \"wael\" ;\r\n    }\r\n\r\n    // Make Api Authorization (Get Token)\r\n    authenticate(){\r\n        let headers = new Headers();\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin','*');\r\n        return this._http.post('/api/token_auth',JSON.stringify(this.tokenParams),{headers:headers}).map(res=>res.json());\r\n    }\r\n\r\n    creatAuthHeader(headers: Headers , token){\r\n        headers.append('Content-Type', 'application/json');\r\n        headers.append('Access-Control-Allow-Origin','*');\r\n        headers.append('Authorization' , token);\r\n    }\r\n\r\n    getUsers(token){\r\n        let headers = new Headers();\r\n        this.creatAuthHeader(headers,token);\r\n        return this._http.get('/api/users',{headers:headers}).map(res=>res.json());\r\n    }\r\n\r\n    getUser(token,url){\r\n        let headers = new Headers();\r\n        this.creatAuthHeader(headers,token);\r\n        return this._http.get(url,{headers:headers}).map(res=>res.json());\r\n    }\r\n\r\n}\r\n"],"sourceRoot":"/source/"}